openapi: 3.1.0

info:
  title: Postcrunch
  description: 'A social media platform where we crunch others post and share ours.'
  version: 1.0.0
  contact:
    name: Nguyen Pham
    email: nguyenminhpham24@gmail.com

servers:
  - url: https://github.com/nguyepham
    description: Development server

tags:
  - name: user
    description: Everything about users and accounts.
  - name: newsfeed
    description: CRUD operations with the newsfeed.
  - name: post
    description: CRUD operations with a post.
  - name: comment
    description: CRUD operations with a comment.
  - name: vote
    description: CRUD operations with a vote.
  - name: report
    description: CRUD operations with a report.

paths:

  /api/v1/newsfeed:
    get:
      tags:
        - newsfeed
      description: Fetch the Postcrunch newsfeed.
      operationId: getNewsfeed
      responses:
        200:
          description: Fetched successfully.
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Newsfeed'
            application/json:
              schema:
                $ref: '#/components/schemas/Newsfeed'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'

components:

  responses:
    Unauthorized:
      description: Access token is missing or invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    NotFound:
      description: The requested resources not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    InternalServerError:
      description: An unexpected error occurred on the server.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  schemas:
    User:
      type: object
      description: A Postcrunch user.
      required:
        - username
        - password
      properties:
        id:
          type: string
          description: The user's id.
        username:
          type: string
          description: The account's username used as the default display name.
        password:
          type: string
          description: The account's password.
        name:
          type: string
          description: The display name of the user.
        email:
          type: string
          description: The user's email.
          format: email
        dob:
          type: string
          description: The user's birthday.
          format: date-time
        gender:
          type: string
          description: The user's gender.

    Newsfeed:
      type: object
      description: The Postcrunch newsfeed.
      properties:
        lastFetched:
          type: string
          description: The last time the newsfeed was fetched.
          format: date-time
        posts:
          type: array
          description: The list of posts on the newsfeed.
          items:
            $ref: '#/components/schemas/Post'
        comments:
          type: array
          description: The list of comments on the newsfeed.
          items:
            $ref: '#/components/schemas/Comment'

    NewContent:
      type: object
      properties:
        contentType:
          type: string
          description: The type of this content.
          enum:
            - POST
            - COMMENT
        text:
          type: string
          description: The text in the content.

    AddPostReq:
      allOf:
        - $ref: '#/components/schemas/NewContent'
        - type: object
          properties:
            authorId:
              type: string
              description: Info about the post's author wrapped in the request.

    AddCommentReq:
      allOf:
        - $ref: '#/components/schemas/NewContent'
        - type: object
          properties:
            authorId:
              type: string
              description: Info about the comment's author wrapped in the request.
            targetId:
              type: string
              description: Info about the comment's target wrapped in the request.

    Content:
      allOf:
        - $ref: '#/components/schemas/NewContent'
        - type: object
          description: A content on the newsfeed (post or comment).
          properties:
            id:
              type: string
              description: The content's id.
            createdAt:
              type: string
              description: The time the content was added.
              format: date-time
            updatedAt:
              type: string
              description: The last time the content was updated.
              format: date-time
            author:
              $ref: '#/components/schemas/User'
            votes:
              type: array
              description: List of up/down votes made on the content.
              items:
                $ref: '#/components/schemas/Vote'
            reports:
              type: array
              description: List of reports made on the content.
              items:
                $ref: '#/components/schemas/Report'

    Post:
      allOf:
        - $ref: '#/components/schemas/Content'
        - type: object
          description: A Postcrunch post.
          properties:
            comments:
              type: array
              description: List of comments made on the post.
              items:
                $ref: '#/components/schemas/Comment'

    Comment:
      allOf:
        - $ref: '#/components/schemas/Content'
        - type: object
          description: A comment made on a post.
          properties:
            target:
              $ref: '#/components/schemas/Post'

    Vote:
      type: object
      description: A vote made on a post.
      properties:
        id:
          type: string
          description: The vote's id.
        voteType:
          type: string
          description: The type of the vote.
          enum:
            - UP
            - DOWN
        createdAt:
          type: string
          description: The time the voted was created.
          format: date-time
        author:
          $ref: '#/components/schemas/User'
        target:
          - $ref: '#/components/schemas/Content'

    Report:
      type: object
      description: A report made on a post or comment.
      properties:
        id:
          type: string
          description: The report's id.
        reason:
          type: string
          description: The reason for reporting the content.
          enum:
            - FRAUD
            - ABUSE
            - OFFENSIVE
            - OTHER
        createdAt:
          type: string
          description: The time the report was created.
          format: date-time
        author:
          $ref: '#/components/schemas/User'
        target:
          - $ref: '#/components/schemas/Content'

    ErrorResponse:
      type: object
      description: The response of an invalid HTTP request.
      properties:
        message:
          type: string
          description: A human-readable message describing the error.
        code:
          type: integer
          description: The HTTP status code.
          format: int32